# --------------------------------------------------
# Description
# --------------------------------------------------
# ...


# --------------------------------------------------
# Config
# do not change below setting
# these setting should be modified in makeconfig.json file
# --------------------------------------------------
INPUT_IS_PATH			:= false
INPUT_CHANNEL_DIRECTION	:= invalid
INPUT_CHANNEL_NAME		:= invalid


# --------------------------------------------------
# Input Checking
# --------------------------------------------------
# ...


# --------------------------------------------------
# Function
# --------------------------------------------------
rwildcard	=	$(wildcard $1/$2) $(foreach d,$(wildcard $1/*),$(call rwildcard,$(d),$2))

# function: get_config(config_name, file, ...) -> string
define get_config
	$(eval $(1) $(3)= $(shell $(SHELL_PREFIX) $(PY) $(CONFIG_PARSER_PATH) $(2) $(1) $($(1)) $(SHELL_SUFFIX)))
endef

# function: get_config_return(return_to, config_name, file, ...)
define get_config_return
	$(eval $(1) $(4)= $(shell $(SHELL_PREFIX) $(PY) $(CONFIG_PARSER_PATH) $(3) $(2) $($(1)) $(SHELL_SUFFIX)))
endef

# function module
ifeq ($(OS),Windows_NT)
FOR_START		:= for %%i in (
FOR_DO			:= ) do
FOR_END			:= 
FOR_ITEM		:= %%i

else
FOR_START		:= for i in 
FOR_DO			:= ; do 
FOR_END			:= ; done
FOR_ITEM		:= $$d

endif


# --------------------------------------------------
# Data
# --------------------------------------------------
MODULE				= Channel

CONFIG_PARSER_PATH 	= Make_Parse.py
PY_CHANNEL_FILE		= Make_Channel.py

CONFIG_JSON_GLOBAL	= makeconfig.json
CONFIG_JSON_LOCAL	= makeconfig_$(MODULE).json
CONFIG_JSON_EXPORT	= makeconfig_Export.json

CHANNEL_OUTPUT		=


# --------------------------------------------------
# Initiation
# --------------------------------------------------
# config based on host platform
ifeq ($(OS),Windows_NT)
PY					= py
SHELL_PREFIX		= 
SHELL_SUFFIX		= 
SPACE_PREFIX		= 
SPACE_SUFFIX		=
PATH_SEPARATOR		= /

else
PY					= python3
SHELL_PREFIX		= sh -c "
SHELL_SUFFIX		= "
SPACE_PREFIX		= "
SPACE_SUFFIX		= "
PATH_SEPARATOR		= \

endif


# read the config from makeconfig
# TODO: find a better way to do this thing, now is too slow
ifeq ($(CONFIG_IS_EXT_CONFIG_ENABLE),false)
else

endif  # CONFIG_IS_EXT_CONFIG_ENABLE


# --------------------------------------------------
# Preprocessing
# --------------------------------------------------
$(eval CHANNEL_OUTPUT = $(shell $(SHELL_PREFIX) $(PY) $(PY_CHANNEL_FILE) $(INPUT_CHANNEL_DIRECTION) $(INPUT_CHANNEL_NAME) $(INPUT_IS_PATH)))


# --------------------------------------------------
# Operation
# --------------------------------------------------
.PHONY: all
all: self


.PHONY: header
header:
#	@echo MODULE $(SPACE_PREFIX)	$(SPACE_SUFFIX) $(MODULE)
	@echo MODULE $(SPACE_PREFIX)    $(SPACE_SUFFIX) $(MODULE)


.PHONY: self
self:
# if is empty output
ifeq ($(CHANNEL_OUTPUT),)

else
	@echo $(CHANNEL_OUTPUT)

endif


.PHONY: clean
clean:


# --------------------------------------------------
# Helper
# --------------------------------------------------
.PHONY: var_list
var_list:
# config settting
	@echo INPUT_IS_ROOT $(SPACE_PREFIX)                $(SPACE_SUFFIX) $(INPUT_IS_ROOT)
	@echo INPUT_CHANNEL_DIRECTION $(SPACE_PREFIX)      $(SPACE_SUFFIX) $(INTPUT_CHANNEL_DIRECTION)
	@echo INPUT_CHANNEL_NAME $(SPACE_PREFIX)           $(SPACE_SUFFIX) $(INPUT_CHANNEL_NAME)

# working directory
# ...

# config file
	@echo CONFIG_PARSER_PATH $(SPACE_PREFIX)           $(SPACE_SUFFIX) $(CONFIG_PARSER_PATH)
	@echo CONFIG_JSON_GLOBAL $(SPACE_PREFIX)           $(SPACE_SUFFIX) $(CONFIG_JSON_GLOBAL)
	@echo CONFIG_JSON_LOCAL $(SPACE_PREFIX)            $(SPACE_SUFFIX) $(CONFIG_JSON_LOCAL)
	@echo CONFIG_JSON_EXPORT $(SPACE_PREFIX)           $(SPACE_SUFFIX) $(CONFIG_JSON_EXPORT)

# path
# ...

# file
# ...

# name, output
	@echo CHANNEL_NAME $(SPACE_PREFIX)                 $(SPACE_SUFFIX) $(CHANNEL_NAME)
	@echo CHANNEL_OUTPUT $(SPACE_PREFIX)               $(SPACE_SUFFIX) $(CHANNEL_OUTPUT)


# --------------------------------------------------
# User Operation
# --------------------------------------------------
